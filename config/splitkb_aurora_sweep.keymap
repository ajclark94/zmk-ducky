/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        SYM2 {
            bindings = <&mo 3>;
            key-positions = <33 32>;
        };

        new_combo {
            bindings = <&mo 4>;
            key-positions = <30 31>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <10 19>;
        };

        mins_combo {
            bindings = <&kp MINUS>;
            key-positions = <3 6>;
        };

        unds_combo {
            bindings = <&kp UNDER>;
            key-positions = <13 16>;
        };

        esc_combo {
            bindings = <&kp ESC>;
            key-positions = <0 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O          &kp P
&kp A  &kp S  &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT      &kp SLASH
                     &mo 1  &kp LSHFT  &kp SPACE  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        EXTEND {
            bindings = <
     &kp ESC    &kp K_BACK      &kp K_FIND     &kp K_FORWARD    &kp INS      &kp PAGE_UP       &kp HOME    &kp UP     &kp END   &kp CAPS
&sk LEFT_ALT  &sk LEFT_GUI  &sk LEFT_SHIFT  &sk LEFT_CONTROL     &trans    &kp PAGE_DOWN       &kp LEFT  &kp DOWN   &kp RIGHT    &kp DEL
   &kp LC(Z)     &kp LC(X)       &kp LC(C)          &kp LGUI  &kp LC(V)  &kp PRINTSCREEN  &kp BACKSPACE   &kp TAB  &kp K_MENU  &kp ENTER
                                                       &none     &trans        &kp ENTER         &trans
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        SYM {
            bindings = <
     &kp EXCL         &kp AT         &kp HASH               &kp DLLR        &kp PERCENT     &kp KP_EQUAL  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9    &kp KP_PLUS
&kp SEMICOLON      &kp COLON   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET  &kp KP_ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6   &kp KP_MINUS
    &kp CARET  &kp AMPERSAND  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DIVIDE
                                                              &trans             &trans           &trans            &none
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        SYM2 {
            bindings = <
   &trans     &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp TILDE  &kp BACKSLASH  &kp PIPE  &trans  &trans  &trans  &trans  &trans  &trans
   &trans     &trans         &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                       &trans   &none  &trans   &none
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        FUNCTION {
            bindings = <
  &kp K_STOP      &kp C_RW      &kp C_PLAY          &kp C_FF  &kp C_BRIGHTNESS_INC    &kp F12  &kp F7  &kp F8  &kp F9   &kp LC(PLUS)
&sk LEFT_ALT  &sk LEFT_GUI  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &kp C_BRIGHTNESS_DEC    &kp F11  &kp F4  &kp F5  &kp F6  &kp LC(MINUS)
  &kp K_MUTE  &kp K_VOL_DN   &kp LC(LS(C))      &kp K_VOL_UP         &kp LC(LS(V))    &kp F10  &kp F1  &kp F2  &kp F3     &kp LC(N0)
                                                       &none                &trans  &kp ENTER   &none
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };
    };
};
